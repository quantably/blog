{"version":3,"file":"component---src-templates-tag-page-js-e091a30d3ddebd8d7818.js","mappings":"sNAqDA,UA/CwBA,IAAqC,IAAAC,EAAA,IAApC,YAAEC,EAAW,KAAEC,EAAI,SAAEC,GAAUJ,EACtD,MAAM,IAAEK,GAAQH,GACRI,MAAOC,EAAK,WAAEC,GAAeL,EAAKM,kBACpCC,GAAkC,QAAtBT,EAAAE,EAAKQ,KAAKC,oBAAY,IAAAX,OAAA,EAAtBA,EAAwBY,QAAS,QAC7CC,EAAY,GAAGN,SAAiC,IAAfA,EAAmB,GAAK,oBAAoBH,KAEnF,OACEU,EAAAA,cAACC,EAAAA,EAAM,CAACZ,SAAUA,EAAUS,MAAO,GAAGR,OAASK,KAC7CK,EAAAA,cAAA,UAAKV,GACLU,EAAAA,cAAA,SAAID,GACJC,EAAAA,cAAA,MAAIE,MAAO,CAAEC,UAAW,SACrBX,EAAMY,KAAIC,IACT,MAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACER,EAAAA,cAAA,MAAIS,IAAKJ,EAAKE,OAAOC,MACnBR,EAAAA,cAAA,WACEU,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETZ,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnCf,EAAAA,cAAA,QAAMe,SAAS,YAAYjB,KAG/BE,EAAAA,cAAA,aAAQK,EAAKC,YAAYU,OAE3BhB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEiB,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAIZ,KAMJ,EAON,MAiCMM,EAAOC,IAAqB,IAApB,YAAEnC,GAAamC,EAClC,MAAM,IAAEhC,GAAQH,EAChB,OAAOa,EAAAA,cAACuB,EAAAA,EAAG,CAACzB,MAAO,iBAAiBR,MAAU,C","sources":["webpack://gatsby-starter-blog/./src/templates/tag-page.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst TagPageTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { nodes: posts, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  return (\n    <Layout location={location} title={`${tag} | ${siteTitle}`}>\n      <h1>{tag}</h1>\n      <p>{tagHeader}</p>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      {/* Optional: Link back to tags index page */}\n      {/* <Link to=\"/tags\">All tags</Link> */}\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\n// Use page context variable $tag to filter posts\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      # Filter by the tag passed in context AND ensure it's a blog post\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fileAbsolutePath: { regex: \"/content/blog/\" }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n        }\n      }\n    }\n  }\n`\n\n// Add Head export for SEO\nexport const Head = ({ pageContext }) => {\n  const { tag } = pageContext\n  return <Seo title={`Posts tagged \"${tag}\"`} />\n} "],"names":["_ref","_data$site$siteMetada","pageContext","data","location","tag","nodes","posts","totalCount","allMarkdownRemark","siteTitle","site","siteMetadata","title","tagHeader","React","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","_ref2","Seo"],"sourceRoot":""}