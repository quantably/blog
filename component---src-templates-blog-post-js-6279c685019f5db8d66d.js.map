{"version":3,"file":"component---src-templates-blog-post-js-6279c685019f5db8d66d.js","mappings":"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","sources":["webpack://peter-wooldridge-blog/./src/components/layout.js","webpack://peter-wooldridge-blog/./src/templates/blog-post.js","webpack://peter-wooldridge-blog/./src/components/seo.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  const header = (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\n        <div>{header}</div>\n        \n        <nav className=\"desktop-nav\">\n          <Link to=\"/blog\" style={{ marginRight: '1rem' }}>Blog</Link>\n          <Link to=\"/projects\" style={{ marginRight: '1rem' }}>Projects</Link>\n          <Link to=\"/media\" style={{ marginRight: '1rem' }}>Media</Link>\n          <Link to=\"/about\" >About</Link>\n        </nav>\n\n        <button \n          className=\"mobile-nav-toggle\" \n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n          aria-expanded={isMobileMenuOpen}\n          style={{\n            background: 'none',\n            border: 'none',\n            padding: '0.5rem',\n            cursor: 'pointer',\n            zIndex: 10\n          }}\n        >\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)' }}></div>\n        </button>\n\n      </header>\n\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n         <Link to=\"/blog\" onClick={() => setIsMobileMenuOpen(false)}>Blog</Link>\n         <Link to=\"/projects\" onClick={() => setIsMobileMenuOpen(false)}>Projects</Link>\n         <Link to=\"/media\" onClick={() => setIsMobileMenuOpen(false)}>Media</Link>\n         <Link to=\"/about\" onClick={() => setIsMobileMenuOpen(false)}>About</Link>\n      </nav>\n\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()} Peter Wooldridge\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          {/* Move Back Button Here (Above Title/Date) */}\n          <div style={{ marginBottom: '1rem' }}> {/* Adjust margin as needed */}\n            <button \n              onClick={() => window.history.back()} \n              style={{ background: 'none', border: 'none', padding: 0, color: 'var(--color-primary)', cursor: 'pointer', textDecoration: 'underline' }}\n            >\n              ← Go back\n            </button>\n          </div>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n          {/* Display Tags if they exist */}\n          {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n            <div style={{ marginTop: '-0.5rem', marginBottom: '1rem', fontSize: 'var(--fontSize-0)' }}>\n              Tags:{` `}\n              {post.frontmatter.tags.map((tag, index) => (\n                <React.Fragment key={tag}>\n                  <Link to={`/tags/${tag}/`} style={{ marginRight: '0.5rem' }}>\n                    {tag}\n                  </Link>\n                  {/* Add comma separator except for the last tag - adjust if needed */}\n                  {/* {index < post.frontmatter.tags.length - 1 ? ', ' : ''} */}\n                </React.Fragment>\n              ))}\n            </div>\n          )}\n        </header>\n        <section\n          className=\"prose prose-lg max-w-none\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr className=\"mt-8\" />\n        <footer>\n          {/* Remove Bio component */}\n          {/* <Bio /> */}\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`/blog${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/blog${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post, site } }) => {\n  const folder = post.fields?.folder;\n  let siteUrl = site.siteMetadata?.siteUrl || '';\n  // Remove trailing slash if present\n  if (siteUrl.endsWith('/')) siteUrl = siteUrl.slice(0, -1);\n  const imageUrl = folder ? `${siteUrl}/social-cards/${folder}.png` : undefined;\n  const author = site.siteMetadata?.author?.name;\n  // Use the raw date from frontmatter for ISO string\n  const publishedTime = post.frontmatter?.date\n    ? new Date(post.frontmatter.date).toISOString()\n    : undefined;\n  return (\n    <>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        image={imageUrl}\n        twitterCardType=\"summary_large_image\"\n      />\n      <meta name=\"author\" content={author} />\n      {publishedTime && (\n        <meta property=\"article:published_time\" content={publishedTime} />\n      )}\n    </>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        author {\n          name\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        folder\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        summary\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, image, twitterCardType = \"summary\", children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {image && <meta property=\"og:image\" content={image} />}\n      <meta name=\"twitter:card\" content={twitterCardType} />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {image && <meta name=\"twitter:image\" content={image} />}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","isRootPath","pathname","isMobileMenuOpen","setIsMobileMenuOpen","useState","header","React","Link","className","to","style","display","justifyContent","alignItems","marginBottom","marginRight","onClick","background","border","padding","cursor","zIndex","width","height","backgroundColor","Date","getFullYear","Head","_ref2","_post$fields","_site$siteMetadata2","_site$siteMetadata3","_site$siteMetadata3$a","_post$frontmatter","data","markdownRemark","post","site","folder","fields","siteUrl","siteMetadata","endsWith","slice","imageUrl","undefined","author","name","publishedTime","frontmatter","date","toISOString","Seo","description","excerpt","image","twitterCardType","content","property","_site$siteMetadata","previous","next","siteTitle","Layout","itemScope","itemType","window","history","back","color","textDecoration","itemProp","tags","length","marginTop","fontSize","map","tag","index","key","dangerouslySetInnerHTML","__html","html","flexWrap","listStyle","slug","rel","_site$siteMetadata2$s","useStaticQuery","metaDescription","defaultTitle","social","twitter"],"sourceRoot":""}