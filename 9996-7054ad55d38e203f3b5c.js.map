{"version":3,"file":"9996-7054ad55d38e203f3b5c.js","mappings":"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","sources":["webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/grammar-utils.js","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2O5ZK7RR.mjs","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_baseSlice.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/drop.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/assign.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/pickBy.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_baseIsRegExp.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/isRegExp.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/gast/lib/src/model.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_baseSome.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/some.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/includes.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_arrayEvery.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_baseEvery.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/every.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/uniq.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/constants.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/negate.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/reject.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/indexOf.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_baseDifference.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/difference.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/compact.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/head.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/utils/lib/src/print.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/lexer.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/utils/lib/src/timer.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/tokens.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_arrayAggregator.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_baseAggregator.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/_createAggregator.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/groupBy.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/dropRight.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/errors.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/stream.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/token-builder.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/languages/generated/ast.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/syntax-tree.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://peter-wooldridge-blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://peter-wooldridge-blog/./node_modules/vscode-jsonrpc/lib/common/events.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/regexp-utils.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/file-system-provider.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/grammar-loader.js","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-7PKI6E2E.mjs","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/value-converter.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/cst-utils.js","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-ROXG7S4E.mjs","webpack://peter-wooldridge-blog/./node_modules/vscode-uri/lib/esm/index.mjs","webpack://peter-wooldridge-blog/./node_modules/lodash-es/flatMap.js","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs","webpack://peter-wooldridge-blog/./node_modules/vscode-jsonrpc/lib/common/is.js","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs","webpack://peter-wooldridge-blog/./node_modules/chevrotain-allstar/lib/atn.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain-allstar/lib/dfa.js","webpack://peter-wooldridge-blog/./node_modules/lodash-es/uniqBy.js","webpack://peter-wooldridge-blog/./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://peter-wooldridge-blog/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/cst-node-builder.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/langium-parser.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/parser-builder-base.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/langium-parser-builder.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/promise-utils.js","webpack://peter-wooldridge-blog/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/documents.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/references/linker.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/references/name-provider.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/uri-utils.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/references/references.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/collections.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/references/scope-computation.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/references/scope.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/caching.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/references/scope-provider.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/serializer/json-serializer.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/service-registry.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/validation/validation-registry.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/validation/document-validator.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/ast-descriptions.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/ast-node-locator.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/disposable.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/configuration.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/document-builder.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/index-manager.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/workspace-manager.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/lexer.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/documentation/jsdoc.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/documentation/documentation-provider.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/documentation/comment-provider.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/async-parser.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/workspace/workspace-lock.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/serializer/hydrator.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/default-module.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/languages/grammar-config.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/parser/completion-parser-builder.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/dependency-injection.js","webpack://peter-wooldridge-blog/./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://peter-wooldridge-blog/./node_modules/langium/lib/utils/ast-utils.js","webpack://peter-wooldridge-blog/./node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://peter-wooldridge-blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-V4Q32G6S.mjs","webpack://peter-wooldridge-blog/./node_modules/mermaid/dist/chunks/mermaid.core/infoDiagram-PH2N3AL5.mjs"],"sourcesContent":["/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, Commit, Common, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Junction, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Service, Statement];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Common: {\n        return {\n          name: Common,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@12\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@12\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9\\\\\\\\-_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-V4Q32G6S.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-ROXG7S4E.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-2O5ZK7RR.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-7PKI6E2E.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-4N47QTOZ.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-KVYON367.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-R6RNRRYF.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-4AB2E3PP.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-O2Q2CXLX.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-MK3ICKWK.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  package_default\n} from \"./chunk-5NNNAHNI.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-7B677QYD.mjs\";\nimport {\n  __name,\n  configureSvgSize,\n  log\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/info/infoParser.ts\nimport { parse } from \"@mermaid-js/parser\";\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"info\", input);\n    log.debug(ast);\n  }, \"parse\")\n};\n\n// src/diagrams/info/infoDb.ts\nvar DEFAULT_INFO_DB = { version: package_default.version };\nvar getVersion = /* @__PURE__ */ __name(() => DEFAULT_INFO_DB.version, \"getVersion\");\nvar db = {\n  getVersion\n};\n\n// src/diagrams/info/infoRenderer.ts\nvar draw = /* @__PURE__ */ __name((text, id, version) => {\n  log.debug(\"rendering info diagram\\n\" + text);\n  const svg = selectSvgElement(id);\n  configureSvgSize(svg, 100, 400, true);\n  const group = svg.append(\"g\");\n  group.append(\"text\").attr(\"x\", 100).attr(\"y\", 40).attr(\"class\", \"version\").attr(\"font-size\", 32).style(\"text-anchor\", \"middle\").text(`v${version}`);\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/info/infoDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer\n};\nexport {\n  diagram\n};\n"],"names":["getAllReachableRules","grammar","allTerminals","ruleNames","Set","entryRule","rules","find","e","entry","getEntryRule","topMostRules","concat","filter","hidden","getHiddenRules","rule","ruleDfs","has","name","add","visitedSet","forEach","node","refRule","ref","getCrossReferenceTerminal","crossRef","terminal","type","nameAssigment","findNameAssignment","isCommentTerminal","terminalRule","terminalRegex","findNodesForProperty","property","findNodesForPropertyInternal","astNode","findNodeForProperty","index","nodes","length","undefined","Math","max","min","element","first","nodeFeature","grammarSource","feature","content","flatMap","findNodeForKeyword","keyword","findNodesForKeywordInternal","value","treeIterator","iterator","result","keywordNodes","next","done","childNode","push","prune","findAssignment","cstNode","_a","container","assignment","startNode","$container","findNameAssignmentInternal","Map","cache","go","refType","childAssignment","set","get","toLowerCase","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","Boolean","definition","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","actionType","action","getActionType","Error","getRuleType","_b","_c","flags","s","i","u","source","abstractElementToRegex","flagText","Object","entries","map","join","RegExp","WILDCARD","withCardinality","alternatives","elements","cardinality","lookahead","group","range","right","keywordToRegex","left","wrap","characterRangeToRegex","negate","until","lastSlash","regex","lastIndexOf","substring","regexFlags","includes","$type","options","RadarTokenBuilder","this","constructor","super","RadarModule","parser","TokenBuilder","ValueConverter","createRadarServices","context","shared","Radar","ServiceRegistry","register","toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","array","start","end","Array","n","guard","toInteger","hasOwnProperty","object","isArrayLike","keys","key","call","predicate","props","prop","path","isObjectLike","nodeIsRegExp","isRegExp","tokenLabel","tokType","obj","isString","LABEL","AbstractProduction","_definition","accept","visitor","visit","prod","idx","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","label","separator","terminalType","serializedTerminal","terminalLabel","pattern","PATTERN","nodeAny","visitNonTerminal","visitAlternative","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","collection","func","isArray","nativeMax","fromIndex","indexOf","isOptionalProd","alreadyVisited","subProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","args","arguments","apply","values","iteratee","comparator","isCommon","valuesLength","outer","computed","valuesIndex","isArrayLikeObject","resIndex","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","toString","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","ignoreCase","message","msgSuffix","terms","term","atom","addOptimizedIdxToResult","complement","code","rangeCode","from","to","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","quantifier","atLeast","isWholeOptional","optimizedCharIdx","char","String","fromCharCode","upperChar","toUpperCase","charCodeAt","lowerChar","handleIgnoreCase","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","visitChildren","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","sticky","analyzeTokenTypes","tokenTypes","tracer","defaults","useSticky","debug","safeMode","positionTracking","lineTerminatorCharacters","onlyRelevantTypes","isEmpty","charCodeToOptimizedIdxMap","initCharCodeToOptimizedIndexMap","currType","Lexer","NA","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","emptyGroups","patternIdxToConfig","hasCustom","currPattern","regExpSource","addStickyFlag","addStartOfInput","isFunction","exec","escapedRegExpString","replace","wrappedRegExp","tokenTypeIdx","clazz","groupName","GROUP","SKIPPED","isUndefined","longerAltType","LONGER_ALT","PUSH_MODE","lineTerminatorCharCodes","getCharCodes","LINE_BREAKS","checkLineBreaksIssues","isCustomPattern","isShortPattern","reduce","acc","x","longerAlt","canLineTerminator","isCustom","short","pop","tokenType","canBeOptimized","charCodeToPatternIdxToConfig","currTokType","optimizedIdx","addToMapOfArrays","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","unicode","optimizedCodes","validatePatterns","validModesNames","errors","missingResult","tokenTypesWithMissingPattern","LexerDefinitionErrorType","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","visitEndAnchor","invalidRegex","regexpAst","endAnchorVisitor","end_of_input","test","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","visitStartAnchor","startAnchorVisitor","start_of_input","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","multiline","global","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","metaChars","noMetaChar","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","performWarningRuntimeChecks","lexerDefinition","trackLines","warnings","hasAnyLineBreak","allTokenTypes","modes","concreteTokenTypes","terminatorCharCodes","currIssue","details","issue","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","buildLineBreakIssueMessage","warningDescriptor","NO_LINE_BREAKS_FLAGS","LineTerminatorOptimizedTester","text","len","lastIndex","c","charsOrCodes","numOrString","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","token","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","clone","categories","searching","CATEGORIES","newCategories","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","fullText","startOffset","line","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","lineTerminatorsPattern","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","freeze","config","lexerDefinitionErrors","lexerDefinitionWarning","trackStartLines","trackEndLines","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","Infinity","actualDefinition","hasOnlySingleMode","defaultMode","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","allModeNames","currModDef","currModName","currAnalyzeResult","allErrMessagesString","chopInput","identity","match","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","startLine","startColumn","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","endLine","endColumn","oldColumn","endOffset","tokenVector","tokenToAdd","PARENT","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","initializer","PROD_TYPE","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","alts","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","item","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","alternative","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","validateGrammar","topLevels","duplicateErrors","collectorVisitor","OccurrenceValidationCollector","allRuleProductions","allProductions","productionGroups","identifyProductionForDuplicates","duplicates","currGroup","currDuplicates","firstProd","defError","DUPLICATE_PRODUCTIONS","param","getExtraProductionArgument","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","currRuleName","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","orCollector","OrCollector","ors","alternations","currOr","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","className","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","currSubDef","isFirstOptional","hasMore","rest","validateAmbiguousAlternationAlternatives","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currErrors","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","other","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","RepetitionCollector","actualOptions","topRulesTable","refResolver","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","topLevelRules","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","reset","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","defineProperty","enumerable","configurable","writable","defaultVisit","ctx","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","children","createBaseSemanticVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","CstVisitorDefinitionError","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","definitionErrors","validationErrors","tokensMap","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","loc","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","input","newInput","howMuch","soughtIdx","newState","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","ErrorWithLocation","character","assertUnreachable","_","StreamImpl","startFn","nextFn","state","Symbol","count","toArray","toSet","toMap","keyFn","valueFn","entryStream","firstDone","DONE_RESULT","addSeparator","searchElement","every","some","callbackfn","nonNullable","initialValue","previousValue","reduceRight","recursiveReduce","findIndex","mapped","isIterable","flat","depth","stream","head","tail","skipCount","limit","maxSize","distinct","by","internalState","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","TreeStreamImpl","root","iterators","includeRoot","pruned","Reduction","sum","a","b","product","DefaultTokenBuilder","diagnostics","buildTokens","reachableRules","terminalTokens","buildTerminalTokens","buildKeywordTokens","terminalToken","unshift","flushLexingReport","popDiagnostics","fragment","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","caseInsensitive","keywordPattern","buildKeywordPattern","findLongerAlt","longerAlts","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","reflection","isInstance","ArrayLiteral","ArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","Grammar","GrammarImport","InferredType","isInferredType","Interface","isInterface","NamedArgument","Negation","isNegation","NumberLiteral","Parameter","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","Type","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","getTypeMetaData","properties","defaultValue","isAstNode","isReference","$refText","isAstNodeDescription","isLinkingError","reference","AbstractAstReflection","subtypes","allSubtypes","nested","existing","getAllSubTypes","allTypes","types","possibleSubType","isCompositeCstNode","isLeafCstNode","isRootCstNode","cc","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","groupIdx","saveState","restoreState","consumeChar","disjunction","begin","multiLine","isRegExpFlag","popChar","peekChar","isTerm","isAssertion","assertion","isBacktracking","atMost","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","isPatternCharacter","patternCharacter","isQuantifier","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","parseHexDigits","classPatternCharacterAtom","isClassAtom","classAtom","isRangeDash","classEscape","capturing","groupAst","number","parseInt","nextChar","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","child","subChild","visitPattern","visitFlags","visitDisjunction","visitWordBoundary","visitNonWordBoundary","visitGroup","visitGroupBackReference","visitQuantifier","exports","Emitter","Event","ral_1","_disposable","dispose","None","CallbackList","callback","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","splice","invoke","ret","callbacks","slice","contexts","default","_options","event","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","NEWLINE_REGEXP","regexpParser","TerminalRegExpVisitor","isStarting","endRegexpStack","endRegex","startRegexp","escapedChar","escapeRegExp","isMultilineComment","regexp","whitespaceCharacters","split","isWhitespace","ws","getCaseInsensitivePattern","partialMatches","partial","re","process","tmp","appendRaw","nbChars","substr","appendOptional","partialRegExp","EmptyFileSystemProvider","readFile","readDirectory","EmptyFileSystem","fileSystemProvider","minimalGrammarModule","LanguageMetaData","fileExtensions","languageId","minimalSharedGrammarModule","AstReflection","loadGrammarFromJson","json","services","createMinimalGrammarServices","serializer","JsonSerializer","deserialize","workspace","LangiumDocumentFactory","fromModel","parse","__defProp","__name","target","Statement","Architecture","Axis","Branch","Checkout","CherryPicking","Commit","Common","Curve","Edge","Entry","GitGraph","Info","Junction","Merge","Packet","PacketBlock","Pie","PieSection","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","Service","Direction","MermaidAstReflection","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","InfoLanguageMetaData","mode","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","runCommonConverter","runCustomConverter","_cstNode","trim","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","DefaultValueConverter","convert","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","Number","RangeComparison","streamCst","isChildNode","parent","tokenToRange","toDocumentSegment","inRange","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","compareRange","DefaultNameRegexp","findCommentNode","commentNames","getPreviousNode","isCommentNode","GitGraphTokenBuilder","GitGraphModule","createGitGraphServices","PieTokenBuilder","PieValueConverter","PieModule","createPieServices","LIB","r","o","h","resolve","cwd","normalize","isAbsolute","relative","f","l","g","_makeLong","dirname","basename","extname","format","dir","base","ext","sep","delimiter","win32","posix","d","toStringTag","URI","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","p","decodeURIComponent","A","w","joinPath","resolvePath","InfoTokenBuilder","InfoModule","createInfoServices","string","stringArray","boolean","elem","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices","createArchitectureServices2","gitGraph","createGitGraphServices2","radar","createRadarServices2","diagramType","lexerErrors","parserErrors","MermaidParseError","err","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","buildATNKey","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","createATN","atn","decisionMap","decisionStates","ruleToStartState","ruleToStopState","states","ruleLength","stop","createRuleStartAndStopATNStates","ruleBlock","block","buildRuleHandle","production","tokenRef","currentRule","nonTerminal","addTransition","ruleRef","defineDecisionState","handle","makeAlts","optional","epsilon","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","blkStart","blkEnd","loop","loopback","loopEnd","decision","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","flatten","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","computeStartState","performLookahead","s0","previousD","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","closure","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","atnState","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","numberOfTransitions","atnStack","getEpsilonTarget","DocumentUri","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","MIN_VALUE","MAX_VALUE","candidate","Is","objectLiteral","one","two","three","four","uri","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","TextDocument","mergeSort","compare","leftIdx","rightIdx","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","added","construct","$cstNode","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","explicit","lexerResult","clear","lexerReport","report","createNode","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","isCrossRef","getAssignment","convertedValue","operator","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","buildReference","existingValue","newValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","groupState","trackedAlternatives","wrapped","delete","buildUnorderedGroup","buildGroup","condition","true","guardCondition","assignTerminal","getRuleName","createLangiumParser","prepareLangiumParser","lastTick","globalInterruptionPeriod","isOperationCancelled","interruptAndCheck","performance","now","Promise","setImmediate","setTimeout","isCancellationRequested","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","DocumentState","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","TextDocuments","FileSystemProvider","fromUri","cancellationToken","createAsync","fromTextDocument","fromString","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","$document","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","all","addDocument","uriString","getDocument","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","UriUtils","equals","fromPath","toPath","fromParts","toParts","repeat","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","startsWith","propertyAssignments","containerProperty","containerIndex","propertyName","reviveReference","mutable","$containerProperty","$containerIndex","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","singleton","hasServices","diagnosticData","ValidationCategory","DocumentValidator","ValidationRegistry","entriesBefore","entriesAfter","checksRecord","thisObj","category","wrapValidationException","addEntry","handleException","functionality","messageContext","getChecks","checks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","arrayIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","sortDocuments","Linked","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listenersCopy","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","parseJSDoc","opts","currentLine","currentCharacter","lines","lastCharacter","skipWhitespace","tagRegex","tagMatch","fullMatch","inlineTagMatches","matchAll","inlineTagRegex","buildInlineTokens","getLines","normalizeOptions","startPosition","JSDocCommentImpl","parseJSDocElement","parseJSDocComment","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOption","escaped","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","firstRegex","lastRegex","isJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","CompletionParser","createCompletionParser","References","Hydrator","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","__requested__","cause","value2","value1","_ral","RAL","install","ral","linkContentToContainer","getContainerOfType","typePredicate","findRootNode","streamContents","keyIndex","isAstNodeInRange","streamAllContents","streamAst","nodeRange","streamReferences","assignMandatoryProperties","typeMetaData","genericNode","copyDefaultValue","propertyType","events_1","CancellationToken","Cancelled","shortcutEvent","MutableToken","_isCancelled","_emitter","_token","PacketTokenBuilder","PacketModule","DEFAULT_INFO_DB","diagram","db","getVersion","renderer","draw","svg","append","attr","style"],"sourceRoot":""}