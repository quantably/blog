{"version":3,"file":"component---src-templates-blog-post-js-a1522f4e2eaa00b7bc64.js","mappings":"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","sources":["webpack://peter-wooldridge-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"max-w-4xl mx-auto px-6 py-16\">\n        {/* Back Button */}\n        <div className=\"mb-8\">\n          <Link \n            to=\"/blog\"\n            className=\"inline-flex items-center text-emerald-400 hover:text-emerald-300 font-medium transition-colors duration-200\"\n          >\n            <svg className=\"w-5 h-5 mr-2 rotate-180\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n            </svg>\n            Back to blog\n          </Link>\n        </div>\n\n        <article\n          className=\"prose prose-lg prose-invert max-w-none\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          {/* Optional header image */}\n          {post.frontmatter.headerImage && post.frontmatter.headerImage.childImageSharp && (\n            <div className=\"mb-8\">\n              <GatsbyImage\n                image={getImage(post.frontmatter.headerImage)}\n                alt={post.frontmatter.title}\n                className=\"rounded-lg mx-auto\"\n                style={{ maxWidth: '500px' }}\n              />\n            </div>\n          )}\n          \n          <header className=\"mb-8 pb-8 border-b border-white/20\">\n            <h1 className=\"font-heading text-4xl md:text-5xl font-bold text-white mb-4 leading-tight\" itemProp=\"headline\">\n              {post.frontmatter.title}\n            </h1>\n            <p className=\"text-gray-400 font-mono\">{post.frontmatter.date}</p>\n            \n            {/* Display Tags if they exist */}\n            {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n              <div className=\"mt-4\">\n                <div className=\"flex flex-wrap gap-2\">\n                  {post.frontmatter.tags.map((tag) => (\n                    <Link \n                      key={tag}\n                      to={`/tags/${tag}/`} \n                      className=\"px-3 py-1 text-sm bg-emerald-600/20 text-emerald-400 rounded-full hover:bg-emerald-600/30 transition-colors\"\n                    >\n                      {tag}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            )}\n          </header>\n          \n          <section\n            className=\"prose prose-lg prose-invert max-w-none prose-headings:font-heading prose-headings:text-white prose-p:text-gray-300 prose-p:leading-relaxed prose-a:text-emerald-400 prose-a:no-underline hover:prose-a:text-emerald-300 prose-strong:text-white prose-code:text-emerald-400 prose-pre:bg-slate-800 prose-pre:border prose-pre:border-slate-700\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n        </article>\n\n        {/* Navigation */}\n        {(previous || next) && (\n          <nav className=\"mt-16 pt-8 border-t border-white/20\">\n            <div className=\"flex flex-col md:flex-row justify-between gap-4\">\n              <div className=\"flex-1\">\n                {previous && (\n                  <Link \n                    to={`/blog${previous.fields.slug}`} \n                    rel=\"prev\"\n                    className=\"inline-flex items-center text-emerald-400 hover:text-emerald-300 transition-colors group\"\n                  >\n                    <svg className=\"w-5 h-5 mr-2 rotate-180 group-hover:-translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n                    </svg>\n                    <div>\n                      <div className=\"text-sm text-gray-400\">Previous</div>\n                      <div className=\"font-medium\">{previous.frontmatter.title}</div>\n                    </div>\n                  </Link>\n                )}\n              </div>\n              \n              <div className=\"flex-1 text-right\">\n                {next && (\n                  <Link \n                    to={`/blog${next.fields.slug}`} \n                    rel=\"next\"\n                    className=\"inline-flex items-center text-emerald-400 hover:text-emerald-300 transition-colors group\"\n                  >\n                    <div>\n                      <div className=\"text-sm text-gray-400\">Next</div>\n                      <div className=\"font-medium\">{next.frontmatter.title}</div>\n                    </div>\n                    <svg className=\"w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n                    </svg>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </nav>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post, site } }) => {\n  const folder = post.fields?.folder;\n  let siteUrl = site.siteMetadata?.siteUrl || '';\n  // Remove trailing slash if present\n  if (siteUrl.endsWith('/')) siteUrl = siteUrl.slice(0, -1);\n  const imageUrl = folder ? `${siteUrl}/social-cards/${folder}.png` : undefined;\n  const author = site.siteMetadata?.author?.name;\n  // Use the raw date from frontmatter for ISO string\n  const publishedTime = post.frontmatter?.date\n    ? new Date(post.frontmatter.date).toISOString()\n    : undefined;\n  return (\n    <>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        image={imageUrl}\n        twitterCardType=\"summary_large_image\"\n      />\n      <meta name=\"author\" content={author} />\n      {publishedTime && (\n        <meta property=\"article:published_time\" content={publishedTime} />\n      )}\n    </>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        author {\n          name\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        folder\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        summary\n        headerImage {\n          childImageSharp {\n            gatsbyImageData(width: 500, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","_post$fields","_site$siteMetadata2","_site$siteMetadata3","_site$siteMetadata3$a","_post$frontmatter","data","markdownRemark","post","site","folder","fields","siteUrl","siteMetadata","endsWith","slice","imageUrl","undefined","author","name","publishedTime","frontmatter","date","Date","toISOString","React","Seo","title","description","excerpt","image","twitterCardType","content","property","_ref","_site$siteMetadata","previous","next","location","siteTitle","Layout","className","Link","to","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","itemScope","itemType","headerImage","childImageSharp","GatsbyImage","getImage","alt","style","maxWidth","itemProp","tags","length","map","tag","key","dangerouslySetInnerHTML","__html","html","slug","rel"],"sourceRoot":""}