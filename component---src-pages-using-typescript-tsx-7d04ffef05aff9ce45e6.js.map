{"version":3,"file":"component---src-pages-using-typescript-tsx-7d04ffef05aff9ce45e6.js","mappings":"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","sources":["webpack://peter-wooldridge-blog/./src/pages/using-typescript.tsx","webpack://peter-wooldridge-blog/./src/components/layout.js","webpack://peter-wooldridge-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  const header = (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"min-h-screen\" style={{ backgroundColor: '#0F182B' }}>\n      <div className=\"max-w-4xl mx-auto px-6 py-2\">\n      <header className=\"flex justify-between items-center mb-4 py-2\">\n        <div className=\"font-bold text-2xl md:text-3xl text-white\">{header}</div>\n\n        <nav className=\"hidden md:flex items-center space-x-8\">\n          <Link className=\"text-gray-300 hover:text-white font-medium transition-colors\" to=\"/blog\">Blog</Link>\n          <Link className=\"text-gray-300 hover:text-white font-medium transition-colors\" to=\"/media\">Media</Link>\n          <a\n            href=\"https://cal.com/quantably/30min\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"bg-emerald-600 hover:bg-emerald-700 text-white px-6 py-3 rounded-lg font-medium transition-colors shadow-sm hover:shadow-md\"\n          >\n            Book a Call\n          </a>\n        </nav>\n\n        <button\n          className=\"md:hidden p-2 text-gray-300 hover:text-white transition-colors\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n          aria-expanded={isMobileMenuOpen}\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            {isMobileMenuOpen ? (\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            ) : (\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            )}\n          </svg>\n        </button>\n\n      </header>\n\n      {/* Mobile menu */}\n      <nav className={`md:hidden ${isMobileMenuOpen ? 'block' : 'hidden'} absolute left-4 right-4 bg-slate-800 border border-slate-600 rounded-lg shadow-lg p-4 z-50 transition-all duration-200`}>\n        <div className=\"flex flex-col space-y-2\">\n          <Link className=\"text-gray-300 hover:text-white hover:bg-slate-700 font-medium py-3 px-4 rounded-lg transition-colors\" to=\"/blog\" onClick={() => setIsMobileMenuOpen(false)}>Blog</Link>\n          <Link className=\"text-gray-300 hover:text-white hover:bg-slate-700 font-medium py-3 px-4 rounded-lg transition-colors\" to=\"/media\" onClick={() => setIsMobileMenuOpen(false)}>Media</Link>\n          <a\n            href=\"https://cal.com/quantably/30min\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-3 rounded-lg font-medium text-center mt-2 transition-colors\"\n            onClick={() => setIsMobileMenuOpen(false)}\n          >\n            Book a Call\n          </a>\n        </div>\n      </nav>\n\n      </div>\n      <main>{children}</main>\n      <div className=\"max-w-4xl mx-auto px-6 py-8\">\n      <footer className=\"mt-16 pt-8 text-center text-gray-300 text-sm\">\n        <div className=\"mb-4\">\n          <a \n            href=\"https://linkedin.com/in/peterwooldridge\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center text-gray-300 hover:text-emerald-400 transition-colors\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n            </svg>\n          </a>\n        </div>\n        Â© {new Date().getFullYear()} Peter Wooldridge\n      </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, image, twitterCardType = \"summary\", children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {image && <meta property=\"og:image\" content={image} />}\n      <meta name=\"twitter:card\" content={twitterCardType} />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {image && <meta name=\"twitter:image\" content={image} />}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","children","pathname","isMobileMenuOpen","setIsMobileMenuOpen","useState","header","className","style","backgroundColor","target","rel","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","image","twitterCardType","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}