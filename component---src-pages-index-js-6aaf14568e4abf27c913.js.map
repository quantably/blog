{"version":3,"file":"component---src-pages-index-js-6aaf14568e4abf27c913.js","mappings":"s/BAqDA,MA1CYA,KAAO,IAADC,EAChB,MAiBMC,EAA+B,QAAzBD,GAjBCE,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBC,OAGvC,OACEI,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAACE,EAAAA,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiBC,YAAAC,EAAA,QAEtBf,aAAM,EAANA,EAAQgB,OACPZ,EAAAA,cAAA,SAAG,2TAID,ECMV,MA9CiBa,IAAwB,IAAAlB,EAAA,IAAvB,KAAEmB,EAAI,SAAEC,GAAUF,EAClC,MAAMG,GAAkC,QAAtBrB,EAAAmB,EAAKhB,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBsB,QAAS,QAC7CC,EAAcJ,EAAKK,iBACnBC,EAAQN,EAAKO,gBAAgBC,MAEnC,OACEtB,EAAAA,cAACuB,EAAAA,EAAM,CAACR,SAAUA,EAAUE,MAAOD,GACjChB,EAAAA,cAAA,WAASwB,wBAAyB,CAAEC,OAAQP,EAAYQ,QAExD1B,EAAAA,cAACN,EAAG,MAEJM,EAAAA,cAAA,MAAI2B,MAAO,CAACC,aAAc,UAE1B5B,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,SAAOC,UAAU,cACfD,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAIC,UAAU,WAAU,QACxBD,EAAAA,cAAA,MAAIC,UAAU,WAAU,WAG5BD,EAAAA,cAAA,aACGoB,EAAMS,KAAIC,IACT,MAAMb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KACpD,OACEjC,EAAAA,cAAA,MAAIkC,IAAKJ,EAAKE,OAAOC,KAAMhC,UAAU,WACnCD,EAAAA,cAAA,MAAIC,UAAU,mBACX6B,EAAKC,YAAYI,MAEpBnC,EAAAA,cAAA,MAAIC,UAAU,oBACZD,EAAAA,cAACoC,EAAAA,KAAI,CAACC,GAAI,QAAQP,EAAKE,OAAOC,OAAQK,SAAS,OAC5CrB,IAGF,MAKbjB,EAAAA,cAACoC,EAAAA,KAAI,CAACC,GAAG,SAAQ,kBAEZ,EAWN,MAAME,EAAOC,IAAA,IAAC,KAAE1B,GAAM0B,EAAA,OAAKxC,EAAAA,cAACyC,EAAAA,EAAG,CAACxB,MAAOH,EAAKK,iBAAiBY,YAAYd,OAAS,C","sources":["webpack://peter-wooldridge-blog/./src/components/bio.js","webpack://peter-wooldridge-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          # social { # Commented out\n          #  twitter # Commented out\n          # } # Commented out\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  // const social = data.site.siteMetadata?.social // Commented out\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={75}\n        height={75}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Hi, I'm Peter. I'm an AI leader with over 15 years of experience, primarily building AI products at companies like Monolith, Elsevier, Experian, and IBM. This site is where I share practical insights: real-world strategies for leading AI teams, navigating project challenges, and using modern tools effectively.\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Bio from \"../components/bio\"\n\n// Note: Layout is applied globally via wrapPageElement\n\n// This component now acts as a wrapper that queries markdown\nconst HomePage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const mainContent = data.indexPageContent\n  const posts = data.latestBlogPosts.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <section dangerouslySetInnerHTML={{ __html: mainContent.html }} />\n\n      <Bio />\n      \n      <hr style={{marginBottom: '2rem'}} />\n\n      <section>\n        <h2>Recent Posts</h2>\n        <table className=\"table-teal\">\n          <thead>\n            <tr>\n              <th className=\"th-teal\">Date</th>\n              <th className=\"th-teal\">Title</th>\n            </tr>\n          </thead>\n          <tbody>\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              return (\n                <tr key={post.fields.slug} className=\"tr-teal\">\n                  <td className=\"td-teal td-date\">\n                    {post.frontmatter.date}\n                  </td>\n                  <td className=\"td-teal td-title\">\n                    <Link to={`/blog${post.fields.slug}`} itemProp=\"url\">\n                      {title}\n                    </Link>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        <Link to=\"/blog\">See all posts</Link>\n      </section>\n    </Layout>\n  )\n}\n\nexport default HomePage\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = ({ data }) => <Seo title={data.indexPageContent.frontmatter.title} />\n\n// Add page query to fetch markdown content\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    # Query for the specific index.md file for the main content\n    indexPageContent: markdownRemark(fileAbsolutePath: { regex: \"/src/pages/index.md$/\" }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n    # Query for the 5 most recent blog posts\n    latestBlogPosts: allMarkdownRemark(\n      # Remove the hardcoded isDraft filter\n      filter: {\n        fileAbsolutePath: { regex: \"/content/blog/\" }\n      }\n      # Sort by date descending\n      sort: { frontmatter: { date: DESC } }\n      # Limit to 5 posts\n      limit: 5\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","author","useStaticQuery","site","siteMetadata","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","_ref","data","location","siteTitle","title","mainContent","indexPageContent","posts","latestBlogPosts","nodes","Layout","dangerouslySetInnerHTML","__html","html","style","marginBottom","map","post","frontmatter","fields","slug","key","date","Link","to","itemProp","Head","_ref2","Seo"],"sourceRoot":""}