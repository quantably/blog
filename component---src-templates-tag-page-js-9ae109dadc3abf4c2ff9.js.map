{"version":3,"file":"component---src-templates-tag-page-js-9ae109dadc3abf4c2ff9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/templates/tag-page.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  const header = (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\n        <div>{header}</div>\n        \n        <nav className=\"desktop-nav\">\n          <Link to=\"/blog\" style={{ marginRight: '1rem' }}>Blog</Link>\n          <Link to=\"/projects\" style={{ marginRight: '1rem' }}>Projects</Link>\n          <Link to=\"/media\" style={{ marginRight: '1rem' }}>Media</Link>\n          <Link to=\"/about\" >About</Link>\n        </nav>\n\n        <button \n          className=\"mobile-nav-toggle\" \n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n          aria-expanded={isMobileMenuOpen}\n          style={{\n            background: 'none',\n            border: 'none',\n            padding: '0.5rem',\n            cursor: 'pointer',\n            zIndex: 10\n          }}\n        >\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)' }}></div>\n        </button>\n\n      </header>\n\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n         <Link to=\"/blog\" onClick={() => setIsMobileMenuOpen(false)}>Blog</Link>\n         <Link to=\"/projects\" onClick={() => setIsMobileMenuOpen(false)}>Projects</Link>\n         <Link to=\"/media\" onClick={() => setIsMobileMenuOpen(false)}>Media</Link>\n         <Link to=\"/about\" onClick={() => setIsMobileMenuOpen(false)}>About</Link>\n      </nav>\n\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} Peter Wooldridge\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst TagPageTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { nodes: posts, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  return (\n    <Layout location={location} title={`${tag} | ${siteTitle}`}>\n      <h1>{tag}</h1>\n      <p>{tagHeader}</p>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      {/* Optional: Link back to tags index page */}\n      {/* <Link to=\"/tags\">All tags</Link> */}\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\n// Use page context variable $tag to filter posts\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      # Filter by the tag passed in context AND ensure it's a blog post\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fileAbsolutePath: { regex: \"/content/blog/\" }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n        }\n      }\n    }\n  }\n`\n\n// Add Head export for SEO\nexport const Head = ({ pageContext }) => {\n  const { tag } = pageContext\n  return <Seo title={`Posts tagged \"${tag}\"`} />\n} ","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","isRootPath","pathname","isMobileMenuOpen","setIsMobileMenuOpen","useState","header","React","Link","className","to","style","display","justifyContent","alignItems","marginBottom","marginRight","onClick","background","border","padding","cursor","zIndex","width","height","backgroundColor","Date","getFullYear","_data$site$siteMetada","pageContext","data","tag","nodes","posts","totalCount","allMarkdownRemark","siteTitle","site","siteMetadata","tagHeader","Layout","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","_ref2","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}