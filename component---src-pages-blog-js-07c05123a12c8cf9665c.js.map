{"version":3,"file":"component---src-pages-blog-js-07c05123a12c8cf9665c.js","mappings":"4JA8DA,IA3DeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EADW,MACEH,EAASI,UAEtB,EAACC,EAAiB,EAACC,IAAuBC,EAAAA,EAAAA,WAAS,GAEnDC,EACJC,EAAAA,cAACC,EAAAA,KAAI,CAACC,UAAU,mBAAmBC,GAAG,KACnCX,GAIL,OACEQ,EAAAA,cAAA,OAAKE,UAAU,iBAAiB,oBAAmBR,GACjDM,EAAAA,cAAA,UAAQE,UAAU,gBAAgBE,MAAO,CAAEC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUC,aAAc,SAC/HR,EAAAA,cAAA,WAAMD,GAENC,EAAAA,cAAA,OAAKE,UAAU,eACbF,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,QAAQC,MAAO,CAAEK,YAAa,SAAU,QACjDT,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,YAAYC,MAAO,CAAEK,YAAa,SAAU,YACrDT,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,SAASC,MAAO,CAAEK,YAAa,SAAU,SAClDT,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,UAAU,UAGrBH,EAAAA,cAAA,UACEE,UAAU,oBACVQ,QAASA,IAAMb,GAAqBD,GACpC,aAAW,cACX,gBAAeA,EACfQ,MAAO,CACLO,WAAY,OACZC,OAAQ,OACRC,QAAS,SACTC,OAAQ,UACRC,OAAQ,KAGVf,EAAAA,cAAA,OAAKI,MAAO,CAAEY,MAAO,OAAQC,OAAQ,MAAOC,gBAAiB,oBAAqBV,aAAc,SAChGR,EAAAA,cAAA,OAAKI,MAAO,CAAEY,MAAO,OAAQC,OAAQ,MAAOC,gBAAiB,oBAAqBV,aAAc,SAChGR,EAAAA,cAAA,OAAKI,MAAO,CAAEY,MAAO,OAAQC,OAAQ,MAAOC,gBAAiB,yBAKjElB,EAAAA,cAAA,OAAKE,UAAW,eAAcN,EAAmB,OAAS,KACvDI,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,QAAQO,QAASA,IAAMb,GAAoB,IAAQ,QAC5DG,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,YAAYO,QAASA,IAAMb,GAAoB,IAAQ,YAChEG,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,SAASO,QAASA,IAAMb,GAAoB,IAAQ,SAC7DG,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAG,SAASO,QAASA,IAAMb,GAAoB,IAAQ,UAGhEG,EAAAA,cAAA,YAAOP,GACPO,EAAAA,cAAA,cAAQ,MACH,IAAImB,MAAOC,cAAc,qBAE1B,C,6GCGV,UAvDkB9B,IAAyB,IAAD+B,EAAA,IAAvB,KAAEC,EAAI,SAAE/B,GAAUD,EACnC,MAAMiC,GAAkC,QAAtBF,EAAAC,EAAKE,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwB7B,QAAS,QAC7CkC,EAAQJ,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN7B,EAAAA,cAAC8B,EAAAA,EAAM,CAACvC,SAAUA,EAAUC,MAAO+B,GACjCvB,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAAC8B,EAAAA,EAAM,CAACvC,SAAUA,EAAUC,MAAO+B,GACjCvB,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,MAAII,MAAO,CAAE2B,UAAW,SACrBL,EAAMM,KAAIC,IACT,MAAMzC,EAAQyC,EAAKC,YAAY1C,OAASyC,EAAKE,OAAOC,KAEpD,OACEpC,EAAAA,cAAA,MAAIqC,IAAKJ,EAAKE,OAAOC,MACnBpC,EAAAA,cAAA,WACEE,UAAU,iBACVoC,WAAS,EACTC,SAAS,6BAETvC,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACC,EAAAA,KAAI,CAACE,GAAI,QAAQ8B,EAAKE,OAAOC,OAAQI,SAAS,OAC7CxC,EAAAA,cAAA,QAAMwC,SAAS,YAAYhD,KAG/BQ,EAAAA,cAAA,aAAQiC,EAAKC,YAAYO,OAE3BzC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACE0C,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CL,SAAS,kBAIZ,KAIJ,EAWN,MAAMM,EAAOA,IAAM9C,EAAAA,cAAC+C,EAAAA,EAAG,CAACvD,MAAM,a,+CCjBrC,IAzCYF,IAA2E,IAAD0D,EAAAC,EAAAC,EAAA,IAAzE,YAAEN,EAAW,MAAEpD,EAAK,MAAE2D,EAAK,gBAAEC,EAAkB,UAAS,SAAE3D,GAAUH,EAC/E,MAAM,KAAEkC,IAAS6B,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBV,GAAepB,EAAKC,aAAamB,YACnDW,EAAgC,QAApBP,EAAGxB,EAAKC,oBAAY,IAAAuB,OAAA,EAAjBA,EAAmBxD,MAExC,OACEQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQuD,EAAe,GAAG/D,OAAW+D,IAAiB/D,GACtDQ,EAAAA,cAAA,QAAMwD,KAAK,cAAcC,QAASH,IAClCtD,EAAAA,cAAA,QAAM0D,SAAS,WAAWD,QAASjE,IACnCQ,EAAAA,cAAA,QAAM0D,SAAS,iBAAiBD,QAASH,IACzCtD,EAAAA,cAAA,QAAM0D,SAAS,UAAUD,QAAQ,YAChCN,GAASnD,EAAAA,cAAA,QAAM0D,SAAS,WAAWD,QAASN,IAC7CnD,EAAAA,cAAA,QAAMwD,KAAK,eAAeC,QAASL,IACnCpD,EAAAA,cAAA,QACEwD,KAAK,kBACLC,SAA0B,QAAjBR,EAAAzB,EAAKC,oBAAY,IAAAwB,GAAQ,QAARC,EAAjBD,EAAmBU,cAAM,IAAAT,OAAR,EAAjBA,EAA2BU,UAAW,KAEjD5D,EAAAA,cAAA,QAAMwD,KAAK,gBAAgBC,QAASjE,IACpCQ,EAAAA,cAAA,QAAMwD,KAAK,sBAAsBC,QAASH,IACzCH,GAASnD,EAAAA,cAAA,QAAMwD,KAAK,gBAAgBC,QAASN,IAC7C1D,EACA,C","sources":["webpack://peter-wooldridge-blog/./src/components/layout.js","webpack://peter-wooldridge-blog/./src/pages/blog.js","webpack://peter-wooldridge-blog/./src/components/seo.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  const header = (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\n        <div>{header}</div>\n        \n        <nav className=\"desktop-nav\">\n          <Link to=\"/blog\" style={{ marginRight: '1rem' }}>Blog</Link>\n          <Link to=\"/projects\" style={{ marginRight: '1rem' }}>Projects</Link>\n          <Link to=\"/media\" style={{ marginRight: '1rem' }}>Media</Link>\n          <Link to=\"/about\" >About</Link>\n        </nav>\n\n        <button \n          className=\"mobile-nav-toggle\" \n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n          aria-expanded={isMobileMenuOpen}\n          style={{\n            background: 'none',\n            border: 'none',\n            padding: '0.5rem',\n            cursor: 'pointer',\n            zIndex: 10\n          }}\n        >\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)' }}></div>\n        </button>\n\n      </header>\n\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n         <Link to=\"/blog\" onClick={() => setIsMobileMenuOpen(false)}>Blog</Link>\n         <Link to=\"/projects\" onClick={() => setIsMobileMenuOpen(false)}>Projects</Link>\n         <Link to=\"/media\" onClick={() => setIsMobileMenuOpen(false)}>Media</Link>\n         <Link to=\"/about\" onClick={() => setIsMobileMenuOpen(false)}>About</Link>\n      </nav>\n\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} Peter Wooldridge\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>Blog</h1>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={`/blog${post.fields.slug}`} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        fileAbsolutePath: { regex: \"/content/blog/\" }\n      }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, image, twitterCardType = \"summary\", children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {image && <meta property=\"og:image\" content={image} />}\n      <meta name=\"twitter:card\" content={twitterCardType} />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {image && <meta name=\"twitter:image\" content={image} />}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","location","title","children","isRootPath","pathname","isMobileMenuOpen","setIsMobileMenuOpen","useState","header","React","Link","className","to","style","display","justifyContent","alignItems","marginBottom","marginRight","onClick","background","border","padding","cursor","zIndex","width","height","backgroundColor","Date","getFullYear","_data$site$siteMetada","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","Layout","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","image","twitterCardType","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}