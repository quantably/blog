{"version":3,"file":"component---src-pages-using-typescript-tsx-5b12c71fb33da630b024.js","mappings":"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","sources":["webpack://peter-wooldridge-blog/./src/pages/using-typescript.tsx","webpack://peter-wooldridge-blog/./src/components/layout.js","webpack://peter-wooldridge-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  const header = (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\n        <div>{header}</div>\n        \n        <nav className=\"desktop-nav\">\n          <Link to=\"/blog\" style={{ marginRight: '1rem' }}>Blog</Link>\n          <Link to=\"/projects\" style={{ marginRight: '1rem' }}>Projects</Link>\n          <Link to=\"/media\" style={{ marginRight: '1rem' }}>Media</Link>\n          <Link to=\"/about\" >About</Link>\n        </nav>\n\n        <button \n          className=\"mobile-nav-toggle\" \n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          aria-label=\"Toggle menu\"\n          aria-expanded={isMobileMenuOpen}\n          style={{\n            background: 'none',\n            border: 'none',\n            padding: '0.5rem',\n            cursor: 'pointer',\n            zIndex: 10\n          }}\n        >\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)', marginBottom: '4px' }}></div>\n          <div style={{ width: '20px', height: '2px', backgroundColor: 'var(--color-text)' }}></div>\n        </button>\n\n      </header>\n\n      <nav className={`mobile-nav ${isMobileMenuOpen ? 'open' : ''}`}>\n         <Link to=\"/blog\" onClick={() => setIsMobileMenuOpen(false)}>Blog</Link>\n         <Link to=\"/projects\" onClick={() => setIsMobileMenuOpen(false)}>Projects</Link>\n         <Link to=\"/media\" onClick={() => setIsMobileMenuOpen(false)}>Media</Link>\n         <Link to=\"/about\" onClick={() => setIsMobileMenuOpen(false)}>About</Link>\n      </nav>\n\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} Peter Wooldridge\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, image, twitterCardType = \"summary\", children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {image && <meta property=\"og:image\" content={image} />}\n      <meta name=\"twitter:card\" content={twitterCardType} />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {image && <meta name=\"twitter:image\" content={image} />}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","children","isRootPath","pathname","isMobileMenuOpen","setIsMobileMenuOpen","useState","header","className","style","display","justifyContent","alignItems","marginBottom","marginRight","onClick","background","border","padding","cursor","zIndex","width","height","backgroundColor","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","image","twitterCardType","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}